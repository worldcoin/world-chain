# This Compose file is expected to be used with the devnet-up.sh script.
# The volumes below mount the configs generated by the script into each
# service.

volumes:
  l1_data:
  l1_bn_data:
  l1_vc_data:
  l2_data:
  safedb_data:
  challenger_data:
  da_data:
  op_log:
  builder_data:
  static:

services:
  setup:
    build:
      dockerfile: setup.Dockerfile
      context: .
      platforms:
       - "linux/amd64"
    volumes:
      - type: bind
        source: ${PWD}/../.static/
        target: /static
      - "safedb_data:/db"
      - "l1_data:/db"
      - op_log:/op_log

  genesis:
    depends_on:
      setup:
        condition: service_completed_successfully
    image: genesis:latest
    command: >
      genesis
    volumes:
      - type: bind
        source: ${PWD}/../.static/genesis/
        target: /static/genesis/


  l1:
    depends_on:
      genesis:
        condition: service_completed_successfully
    build:
      dockerfile: l1-geth.Dockerfile
      context: .
      platforms:
      - "linux/amd64"
    ports:
      - "8545:8545"
      - "8546:8546"
      - "7060:6060"
    volumes:
      - "static:/static"
      - "${PWD}/../.static/:/static/"
      - "safedb_data:/db"
      - "l1_data:/db"
      - op_log:/op_log
    environment:
      GETH_MINER_RECOMMIT: 100ms
  l1-bn:
    depends_on:
      genesis:
        condition: service_completed_successfully
    build:
      context: .
      dockerfile: l1-lighthouse.Dockerfile
    ports:
      - "9000:9000"
      - "5052:5052"
    volumes:
      - "l1_bn_data:/db"
      - "${PWD}/../.static/auth/jwt.txt:/config/jwt-secret.txt"
      - "${PWD}/../.static/beacon/config.yaml:/genesis/config.yaml"
      - "${PWD}/../.static/beacon/deposit_contract_block.txt:/genesis/deposit_contract_block.txt"
      - "${PWD}/../.static/genesis/genesis-l1.ssz:/genesis/genesis.ssz"
    environment:
      LH_EXECUTION_ENDPOINT: "http://l1:8551"
    entrypoint:
      - "/bin/sh"
      - "/entrypoint-bn.sh"

  l1-vc:
    depends_on:
      - l1-bn
      - genesis
    build:
      context: .
      dockerfile: l1-lighthouse.Dockerfile
    volumes:
      - "l1_vc_data:/db"
      - "${PWD}/../.static/beacon/data/keys:/validator_setup/validators"
      - "${PWD}/../.static/beacon/data/secrets:/validator_setup/secrets"
      - "${PWD}/../.static/beacon/config.yaml:/genesis/config.yaml"
      - "${PWD}/../.static/beacon/deposit_contract_block.txt:/genesis/deposit_contract_block.txt"
      - "${PWD}/../.static/genesis/genesis-l1.ssz:/genesis/genesis.ssz"
    environment:
      LH_BEACON_NODES: "http://l1-bn:5052/"
    entrypoint:
      - "/bin/sh"
      - "/entrypoint-vc.sh"

  l2:
    depends_on:
      - genesis
    build:
      context: .
      dockerfile: l2-op-geth.Dockerfile
    ports:
      - "8544:8544"
      - "8060:6060"
      - "8551:8551"
    volumes:
      - "l2_data:/db"
      - "${PWD}/../.static/genesis/genesis-l2.json:/genesis.json"
      - "${PWD}/../.static/auth/jwt.txt:/config/jwt-secret.txt"
    entrypoint:
      # pass the L2 specific flags by overriding the entry-point and adding extra arguments
      - "/bin/sh"
      - "/entrypoint.sh"
    environment:
      GETH_MINER_RECOMMIT: 100ms

  op-node:
    depends_on:
      - l1
      - l1-bn
      - l1-vc
      - l2
      - rollup-boost
      - genesis
    image: "us-docker.pkg.dev/oplabs-tools-artifacts/images/op-node:develop"
    command: >
      op-node 
      --l1=ws://l1:8546
      --l1.beacon=http://l1-bn:5052
      --l1.epoch-poll-interval=12s
      --l1.http-poll-interval=6s
      --l2=http://rollup-boost:8081
      --l2.jwt-secret=/config/jwt.txt
      --sequencer.enabled
      --sequencer.enabled
      --sequencer.l1-confs=0
      --verifier.l1-confs=0
      --p2p.sequencer.key=8b3a350cf5c34c9194ca85829a2df0ec3153be0318b5e2d3348e872092edffba
      --rollup.config=/rollup.json
      --rpc.addr=0.0.0.0
      --rpc.port=8545
      --p2p.listen.ip=0.0.0.0
      --p2p.listen.tcp=9003
      --p2p.listen.udp=9003
      --p2p.scoring.peers=light
      --l1.rpckind=standard
      --p2p.ban.peers=true
      --p2p.priv.path=/config/p2p-node-key.txt
      --metrics.enabled
      --metrics.addr=0.0.0.0
      --metrics.port=7300
      --rpc.enable-admin
      --safedb.path=/db
      --altda.enabled=false
      --altda.da-service=true
      --altda.da-server=http://da-server:3100
    ports:
      - "7545:8545"
      - "9003:9003"
      - "7300:7300"
      - "6060:6060"
    volumes:
      - safedb_data:/db
      - "${PWD}/../.static/auth/p2p-sequencer-key.txt:/config/p2p-sequencer-key.txt"
      - "${PWD}/../.static/auth/p2p-node-key.txt:/config/p2p-node-key.txt"
      - "${PWD}/../.static/auth/jwt.txt:/config/jwt.txt"
      - "${PWD}/../.static/genesis/rollup.json:/rollup.json"
      - op_log:/op_log

  op-proposer:
    depends_on:
      - l1
      - l2
      - op-node
    image: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-proposer:develop
    ports:
      - "6062:6060"
      - "7302:7300"
      - "6546:8545"
    environment:
      OP_PROPOSER_L1_ETH_RPC: http://l1:8545
      OP_PROPOSER_ROLLUP_RPC: http://op-node:8545
      OP_PROPOSER_POLL_INTERVAL: 1s
      OP_PROPOSER_NUM_CONFIRMATIONS: 1
      OP_PROPOSER_MNEMONIC: test test test test test test test test test test test junk
      OP_PROPOSER_L2_OUTPUT_HD_PATH: "m/44'/60'/0'/0/1"
      OP_PROPOSER_L2OO_ADDRESS: "0x4aff918D1Af8873b5c0f41deCaFd3b838E1E1A6A"
      OP_PROPOSER_GAME_FACTORY_ADDRESS: "0x5e8176772863842cd9d692c9E793dc4958626E69"
      OP_PROPOSER_GAME_TYPE:
      OP_PROPOSER_PROPOSAL_INTERVAL: "10m"
      OP_PROPOSER_PPROF_ENABLED: "true"
      OP_PROPOSER_METRICS_ENABLED: "true"
      OP_PROPOSER_ALLOW_NON_FINALIZED: "true"
      OP_PROPOSER_RPC_ENABLE_ADMIN: "true"

  op-batcher:
    depends_on:
      - l1
      - l2
      - op-node
    image: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-batcher:develop
    command: >
     op-batcher 
      --l2-eth-rpc=http://l2:8544
      --rollup-rpc=http://op-node:8545 
      --num-confirmations=1
      --resubmission-timeout=30s 
      --rpc.addr=0.0.0.0 
      --rpc.port=8549 
      --rpc.enable-admin 
      --l1-eth-rpc=http://l1:8545 
      --safe-abort-nonce-too-low-count=3 
      --private-key=bf7604d9d3a1c7748642b1b7b05c2bd219c9faa91458b370f85e5a40f3b03af7 
      --metrics.enabled 
      --metrics.addr=0.0.0.0 
      --metrics.port=7300
    ports:
      - "6061:6060"
      - "7301:7300"
      - "6545:8545"

  # op-challenger:
  #   depends_on:
  #     - l1
  #     - l1-bn
  #     - l2
  #     - op-node
  #   image: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-challenger:develop
  #   volumes:
  #     - "challenger_data:/db"
  #     - "../op-program/bin:/op-program"
  #   environment:
  #     OP_CHALLENGER_L1_ETH_RPC: http://l1:8545
  #     OP_CHALLENGER_L1_BEACON: http://l1-bn:5052
  #     OP_CHALLENGER_ROLLUP_RPC: http://op-node:8545
  #     OP_CHALLENGER_TRACE_TYPE: cannon,fast
  #     OP_CHALLENGER_GAME_FACTORY_ADDRESS: ${DGF_ADDRESS}
  #     # The devnet can't set the absolute prestate output root because the contracts are deployed in L1 genesis
  #     # before the L2 genesis is known.
  #     OP_CHALLENGER_UNSAFE_ALLOW_INVALID_PRESTATE: "true"
  #     OP_CHALLENGER_DATADIR: /db
  #     OP_CHALLENGER_CANNON_ROLLUP_CONFIG: ${PWD}/../.static/genesis/rollup.json
  #     OP_CHALLENGER_CANNON_L2_GENESIS: ${PWD}/../.static/genesis/genesis-l2.json
  #     OP_CHALLENGER_CANNON_BIN: ./cannon/bin/cannon
  #     OP_CHALLENGER_CANNON_SERVER: /op-program/op-program
  #     OP_CHALLENGER_CANNON_PRESTATE: /op-program/prestate.json
  #     OP_CHALLENGER_L2_ETH_RPC: http://l2:8545
  #     OP_CHALLENGER_MNEMONIC: test test test test test test test test test test test junk
  #     OP_CHALLENGER_HD_PATH: "m/44'/60'/0'/0/4"
  #     OP_CHALLENGER_NUM_CONFIRMATIONS: 1

  da-server:
    depends_on:
      - genesis
    image: us-docker.pkg.dev/oplabs-tools-artifacts/images/da-server:latest
    command: >
      da-server --file.path=/data --addr=0.0.0.0 --port=3100 --log.level=debug
    ports:
      - "3100:3100"
    volumes:
      - "da_data:/data"

  # sentinel:
  #   image: quarry/sentinel # TODO(10141): We need a public image for this (sentinel is out of repo)
  #   volumes:
  #     - "${PWD}/.static/.static/rollup.json:/rollup.json"
  #   # private-key is mnemonic index 5 of the test mnemonic.
  #   command: >
  #     sentinel
  #     --datadir=data
  #     --l1-rpc-http=http://l1:8545
  #     --l1-rpc-ws=ws://l1:8546
  #     --da-storage-uri=http://da-server:3100
  #     --private-key=0x8b3a350cf5c34c9194ca85829a2df0ec3153be0318b5e2d3348e872092edffba
  #     --config=/rollup.json

  artifact-server:
    depends_on:
      - l1
      - genesis
    image: nginx:1.25-alpine
    ports:
      - "8080:80"
    volumes:
      - "static:/usr/share/nginx/html/:ro"
    security_opt:
      - "no-new-privileges:true"

  builder-op-node:
    image: "us-docker.pkg.dev/oplabs-tools-artifacts/images/op-node:develop"
    depends_on:
      - l1
      - l2
      - op-node
      - world-chain-builder
      - genesis
    command: >
      op-node 
      --l1.beacon=http://l1-bn:5052
      --l1.epoch-poll-interval=12s
      --l1.http-poll-interval=6s
      --l2=http://world-chain-builder:8551
      --l2.jwt-secret=/config/jwt-secret.txt
      --rollup.config=/rollup.json
      --rpc.addr=0.0.0.0
      --rpc.port=8545
      --p2p.listen.ip=0.0.0.0
      --p2p.listen.tcp=9003
      --p2p.listen.udp=9003
      --p2p.scoring.peers=light
      --p2p.ban.peers=true
      --metrics.enabled 
      --metrics.addr=0.0.0.0 
      --metrics.port=7300 
      --pprof.enabled 
      --rpc.enable-admin 
      --safedb.path=/db 
      --altda.enabled=false 
      --altda.da-service=false 
      --altda.da-server=http://da-server:3100 
      --l1=ws://l1:8546
    volumes:
      - "${PWD}/../.static/auth/jwt.txt:/config/jwt-secret.txt"
      - "${PWD}/../.static/genesis/rollup.json:/rollup.json"
    ports:
      - 9546:9546

  world-chain-builder:
    depends_on:
      - rollup-boost
      - genesis
    image: world-chain-builder:latest
    command: >
      node
       --datadir=/db
       --chain="/genesis.json"
       --http
       --http.corsdomain="*"
       --http.addr=0.0.0.0
       --http.port=8545
       --http.api=all
       --ws
       --ws.addr=0.0.0.0
       --ws.port=8546
       --ws.origins="*"
       --ws.api=all
       --authrpc.addr=0.0.0.0
       --authrpc.port=8551
       --rollup.discovery.v4
       --authrpc.jwtsecret=/config/jwt-secret.txt
    ports:
      - "5545:8545"
      - "6063:6060"
      - "8552:8551"
    volumes:
      - "builder_data:/db"
      - "${PWD}/../.static/genesis/genesis-l2.json:/genesis.json"
      - "${PWD}/../.static/auth/jwt.txt:/config/jwt-secret.txt"

  load-test:
    depends_on:
      - world-chain-builder
      - l2
    build:
      context: .
      dockerfile: Dockerfile.tx-fuzz
    entrypoint:
      - "/app/livefuzzer"
      - "spam"
      - "--txcount=3"
      - "--seed=31337"
      - "--slot-time=1"
      - "--sk=0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80"
      - "--rpc=http://l2:8544"
      - "--rpc2=http://world-chain-builder:8545"

  rollup-boost:
    depends_on:
      - genesis
    build:
      context: .
      dockerfile: Dockerfile.rollup-boost
    ports:
      - "8081:8081"
    volumes:
      - "${PWD}/../.static/auth/jwt.txt:/config/jwt-secret.txt"
    entrypoint:
      - "/app/rollup-boost"
      - "--jwt-path=/config/jwt-secret.txt"
      - "--l2-url=http://l2:8551"
      - "--builder-url=http://world-chain-builder:8551"
      - "--boost-sync"